{"version":3,"file":"react-hook-form-generator.cjs.development.js","sources":["../src/hooks/useStyles.ts","../src/hooks/useErrorMessage.ts","../src/components/TextField.tsx","../src/components/TextAreaField.tsx","../src/components/NumberField.tsx","../src/components/SwitchField.tsx","../src/components/CheckboxField.tsx","../src/components/SelectField.tsx","../src/components/Containers.tsx","../src/components/Form.tsx"],"sourcesContent":["import { useMemo, createContext, useContext } from 'react';\r\n\r\nimport { FormStyles, FieldStyles } from '../types';\r\n\r\nexport const StyleCtx = createContext({} as FormStyles);\r\n\r\nexport const useStyles = <T extends FieldStyles>(\r\n  type: keyof FormStyles,\r\n  inlineStyles?: T\r\n): T => {\r\n  const baseStyles = useContext(StyleCtx);\r\n\r\n  return useMemo(() => {\r\n    return !!inlineStyles\r\n      ? { ...baseStyles[type], ...inlineStyles }\r\n      : (baseStyles[type] as T);\r\n  }, [type, baseStyles, inlineStyles]);\r\n};\r\n","import { useMemo } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nexport const useErrorMessage = (name: string, label?: string) => {\r\n  const { errors } = useFormContext();\r\n\r\n  return useMemo(() => {\r\n    const error = errors[name];\r\n\r\n    if (!error) return undefined;\r\n\r\n    const message = error.message;\r\n\r\n    if (message) return message.replace(name, label || name);\r\n    return 'Field validation failed';\r\n  }, [errors, name, label]);\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  Input,\r\n  InputRightAddon,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n} from '@chakra-ui/react';\r\n\r\nimport { FieldProps, FieldStyles, TextFieldSchema } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const TextField: FC<FieldProps<TextFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n  defaultValue,\r\n}) => {\r\n  const {\r\n    label,\r\n    placeholder,\r\n    htmlInputType,\r\n    helperText,\r\n    isRequired,\r\n    leftInputAddon,\r\n    rightInputAddon,\r\n    shouldDisplay,\r\n    styles = {},\r\n  } = field;\r\n\r\n  const fieldStyles = useStyles<FieldStyles>('textField', styles);\r\n\r\n  const { register, watch } = useFormContext();\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const values = watch(name);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.label}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      {!!leftInputAddon || rightInputAddon ? (\r\n        <InputGroup {...fieldStyles.inputGroup}>\r\n          {!!leftInputAddon && <InputLeftAddon {...leftInputAddon} />}\r\n          <Input\r\n            data-testid={id}\r\n            type={htmlInputType || 'text'}\r\n            name={name}\r\n            aria-label={name}\r\n            ref={register()}\r\n            placeholder={placeholder}\r\n            defaultValue={defaultValue || ''}\r\n            {...fieldStyles.input}\r\n          />\r\n          {!!rightInputAddon && <InputRightAddon {...rightInputAddon} />}\r\n        </InputGroup>\r\n      ) : (\r\n        <Input\r\n          data-testid={id}\r\n          type={htmlInputType || 'text'}\r\n          name={name}\r\n          aria-label={name}\r\n          ref={register()}\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue || ''}\r\n          {...fieldStyles.input}\r\n        />\r\n      )}\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  FormHelperText,\r\n} from '@chakra-ui/react';\r\n\r\nimport { FieldProps, FieldStyles, TextAreaFieldSchema } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const TextAreaField: FC<FieldProps<TextAreaFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n  defaultValue,\r\n}) => {\r\n  const {\r\n    label,\r\n    placeholder,\r\n    helperText,\r\n    isRequired,\r\n    shouldDisplay,\r\n    styles = {},\r\n  } = field;\r\n\r\n  const fieldStyles = useStyles<FieldStyles>('textAreaField', styles);\r\n\r\n  const { register, watch } = useFormContext();\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const values = watch(name);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.label}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      <Textarea\r\n        data-testid={id}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        ref={register()}\r\n        defaultValue={defaultValue || ''}\r\n        {...fieldStyles.input}\r\n      />\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormErrorMessage,\r\n} from '@chakra-ui/react';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n\r\nimport { FieldProps, FieldStyles, NumberFieldSchema } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const NumberField: FC<FieldProps<NumberFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n  defaultValue,\r\n}) => {\r\n  const {\r\n    label,\r\n    placeholder,\r\n    helperText,\r\n    isRequired,\r\n    shouldDisplay,\r\n    styles = {},\r\n  } = field;\r\n\r\n  const fieldStyles = useStyles<FieldStyles>('numberField', styles);\r\n\r\n  const { control, watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      key={`${name}-control`}\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.errorMessage}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue || 0}\r\n        as={\r\n          <NumberInput>\r\n            <NumberInputField\r\n              id={id}\r\n              data-testid={id}\r\n              placeholder={placeholder}\r\n              {...fieldStyles.input}\r\n            />\r\n            <NumberInputStepper>\r\n              <NumberIncrementStepper />\r\n              <NumberDecrementStepper />\r\n            </NumberInputStepper>\r\n          </NumberInput>\r\n        }\r\n      />\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Switch,\r\n} from '@chakra-ui/react';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { FieldProps, SwitchFieldStyles, SwitchFieldSchema } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const SwitchField: FC<FieldProps<SwitchFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n}) => {\r\n  const { label, helperText, isRequired, shouldDisplay, styles = {} } = field;\r\n\r\n  const { register, watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const fieldStyles = useStyles<SwitchFieldStyles>('switchField', styles);\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      key={`${name}-control`}\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.label}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      <Switch\r\n        name={name}\r\n        data-testid={id}\r\n        ref={register}\r\n        {...fieldStyles.switch}\r\n      />\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Checkbox,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { FieldProps, CheckboxFieldSchema, CheckboxFieldStyles } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const checkboxFieldStyles: CheckboxFieldStyles = {\r\n  checkboxGroup: {\r\n    isInline: true,\r\n    spacing: 4,\r\n  },\r\n};\r\n\r\nexport const CheckboxField: FC<FieldProps<CheckboxFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n}) => {\r\n  const { label, helperText, isRequired, shouldDisplay, styles = {} } = field;\r\n\r\n  const { register, watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const fieldStyles = useStyles<CheckboxFieldStyles>('checkboxField', styles);\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      key={`${name}-control`}\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.label}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      <Stack {...fieldStyles.checkboxGroup}>\r\n        {field.checkboxes.map(checkbox => (\r\n          <Checkbox\r\n            key={checkbox.name}\r\n            name={checkbox.name}\r\n            ref={register}\r\n            data-testid={`${id}-${checkbox.name}`}\r\n          >\r\n            {checkbox.label || checkbox.name}\r\n          </Checkbox>\r\n        ))}\r\n      </Stack>\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nimport { FieldProps, SelectFieldSchema, SelectFieldStyles } from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\n\r\nexport const SelectField: FC<FieldProps<SelectFieldSchema>> = ({\r\n  id,\r\n  name,\r\n  field,\r\n  defaultValue,\r\n}) => {\r\n  const { label, helperText, isRequired, shouldDisplay, styles = {} } = field;\r\n\r\n  const { register, watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const fieldStyles = useStyles<SelectFieldStyles>('selectField', styles);\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      key={`${name}-control`}\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...fieldStyles.control}\r\n    >\r\n      {!!label && (\r\n        <FormLabel htmlFor={name} {...fieldStyles.label}>\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n      <Select\r\n        name={name}\r\n        data-testid={id}\r\n        ref={register()}\r\n        defaultValue={defaultValue || field.options[0].value}\r\n        {...fieldStyles.select}\r\n      >\r\n        {field.options.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label || option.value}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      {!!helperText && (\r\n        <FormHelperText {...fieldStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...fieldStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  ButtonGroup,\r\n  IconButton,\r\n  Flex,\r\n  Collapse,\r\n  useDisclosure,\r\n  Box,\r\n  Stack,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n} from '@chakra-ui/react';\r\nimport { useFormContext, useFieldArray } from 'react-hook-form';\r\n\r\nimport {\r\n  FieldProps,\r\n  ArrayFieldStyles,\r\n  ArrayFieldSchema,\r\n  Field,\r\n  ObjectFieldStyles,\r\n  ObjectFieldSchema,\r\n} from '../types';\r\nimport { useErrorMessage } from '../hooks/useErrorMessage';\r\nimport { useStyles } from '../hooks/useStyles';\r\nimport { TextField } from './TextField';\r\nimport { NumberField } from './NumberField';\r\nimport { SwitchField } from './SwitchField';\r\nimport { CheckboxField } from './CheckboxField';\r\nimport { SelectField } from './SelectField';\r\nimport { TextAreaField } from './TextAreaField';\r\nimport { AddIcon, DeleteIcon, ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\r\n\r\nconst renderField = (\r\n  [name, field]: [string, Field],\r\n  id?: string,\r\n  defaultValue?: any\r\n) => {\r\n  let Component: any = null;\r\n\r\n  switch (field.type) {\r\n    case 'text':\r\n      Component = TextField;\r\n      break;\r\n\r\n    case 'textArea':\r\n      Component = TextAreaField;\r\n      break;\r\n\r\n    case 'number':\r\n      Component = NumberField;\r\n      break;\r\n\r\n    case 'array':\r\n      Component = ArrayField;\r\n      break;\r\n\r\n    case 'object':\r\n      Component = ObjectField;\r\n      break;\r\n\r\n    case 'switch':\r\n      Component = SwitchField;\r\n      break;\r\n\r\n    case 'checkbox':\r\n      Component = CheckboxField;\r\n      break;\r\n\r\n    case 'select':\r\n      Component = SelectField;\r\n      break;\r\n\r\n    case 'custom':\r\n      Component = field.component;\r\n      return (\r\n        <Box>\r\n          <Component\r\n            id={id}\r\n            data-testid={id}\r\n            name={name}\r\n            field={field}\r\n            defaultValue={defaultValue}\r\n            {...field.props}\r\n          />\r\n        </Box>\r\n      );\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Component\r\n        id={id}\r\n        data-testid={id}\r\n        name={name}\r\n        field={field}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const arrayFieldStyles: ArrayFieldStyles = {\r\n  arrayContainer: {\r\n    spacing: 4,\r\n    marginTop: 2,\r\n  },\r\n  label: {\r\n    padding: 0,\r\n    display: 'flex',\r\n  },\r\n  countText: {\r\n    fontWeight: 400,\r\n    marginLeft: 1,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n  },\r\n  buttonGroup: {\r\n    marginLeft: 'auto',\r\n  },\r\n  addButton: {\r\n    size: 'xs',\r\n  },\r\n  deleteButton: {\r\n    size: 'xs',\r\n    margin: 'auto',\r\n  },\r\n  clearButton: {\r\n    size: 'xs',\r\n  },\r\n  collapseButton: {\r\n    size: 'xs',\r\n  },\r\n  itemContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 2.5rem',\r\n    paddingLeft: 2,\r\n    paddingBottom: 2,\r\n    paddingTop: 1,\r\n    border: '1px solid',\r\n    borderRadius: 4,\r\n    borderColor: 'gray.200',\r\n    backgroundColor: 'gray.50',\r\n  },\r\n  deleteItemContainer: {\r\n    display: 'flex',\r\n  },\r\n};\r\n\r\nexport const ArrayField: FC<FieldProps<ArrayFieldSchema>> = ({\r\n  name,\r\n  field,\r\n}) => {\r\n  const {\r\n    label,\r\n    isRequired,\r\n    isCollapsable,\r\n    itemField,\r\n    helperText,\r\n    shouldDisplay,\r\n    styles = {},\r\n  } = field;\r\n\r\n  const { control, watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const { fields, append, remove } = useFieldArray({ name, control });\r\n\r\n  const { isOpen, onOpen, onToggle } = useDisclosure({ defaultIsOpen: true });\r\n\r\n  const arrayStyles = useStyles<ArrayFieldStyles>('arrayField', styles);\r\n\r\n  const errorMessage = useErrorMessage(name, label);\r\n\r\n  const addItem = () => {\r\n    append({});\r\n    onOpen();\r\n  };\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      isRequired={isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...arrayStyles.control}\r\n    >\r\n      <Flex {...arrayStyles.toolbar}>\r\n        {!!label && (\r\n          <FormLabel htmlFor={name} {...arrayStyles.label}>\r\n            {label} <Box {...arrayStyles.countText}>({fields.length})</Box>\r\n          </FormLabel>\r\n        )}\r\n        <ButtonGroup {...arrayStyles.buttonGroup}>\r\n          <IconButton\r\n            icon={<AddIcon />}\r\n            aria-label=\"Add item\"\r\n            onClick={addItem}\r\n            {...arrayStyles.addButton}\r\n          />\r\n          <IconButton\r\n            icon={<DeleteIcon />}\r\n            aria-label=\"Clear items\"\r\n            onClick={() => remove()}\r\n            {...arrayStyles.clearButton}\r\n          />\r\n          {isCollapsable && (\r\n            <IconButton\r\n              as={isOpen ? ViewOffIcon : ViewIcon}\r\n              aria-label={isOpen ? 'Hide items' : 'Show items'}\r\n              onClick={onToggle}\r\n              {...arrayStyles.collapseButton}\r\n            />\r\n          )}\r\n        </ButtonGroup>\r\n      </Flex>\r\n      <Collapse isOpen={isOpen}>\r\n        <Stack {...arrayStyles.arrayContainer}>\r\n          {fields.map((item, i) => (\r\n            <Box\r\n              key={item?.id || `${name}[${i}].value`}\r\n              {...arrayStyles.itemContainer}\r\n            >\r\n              {renderField(\r\n                [`${name}[${i}].value`, itemField],\r\n                item.id,\r\n                item.value\r\n              )}\r\n              <Box {...arrayStyles.deleteItemContainer}>\r\n                <IconButton\r\n                  icon={<DeleteIcon />}\r\n                  aria-label=\"Delete item\"\r\n                  onClick={() => remove(i)}\r\n                  {...arrayStyles.deleteButton}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Stack>\r\n      </Collapse>\r\n      {!!helperText && (\r\n        <FormHelperText {...arrayStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...arrayStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n\r\nexport const objectFieldStyles: ObjectFieldStyles = {\r\n  objectContainer: {\r\n    spacing: 4,\r\n    borderWidth: 1,\r\n    borderColor: 'gray.200',\r\n    padding: 2,\r\n    borderRadius: 4,\r\n    marginTop: 2,\r\n    backgroundColor: 'gray.50',\r\n  },\r\n  label: {\r\n    padding: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n  },\r\n  collapseButton: {\r\n    size: 'xs',\r\n    marginLeft: 'auto',\r\n  },\r\n};\r\n\r\nexport const ObjectField: FC<FieldProps<ObjectFieldSchema>> = ({\r\n  name,\r\n  field,\r\n  id,\r\n  defaultValue,\r\n}) => {\r\n  const {\r\n    label,\r\n    isCollapsable,\r\n    isRequired,\r\n    helperText,\r\n    shouldDisplay,\r\n    styles = {},\r\n  } = field;\r\n\r\n  const { watch } = useFormContext();\r\n\r\n  const values = watch(name);\r\n\r\n  const { isOpen, onToggle } = useDisclosure({ defaultIsOpen: true });\r\n\r\n  const objectStyles = useStyles<ObjectFieldStyles>('objectField', styles);\r\n\r\n  const errorMessage = useErrorMessage(name, field.label);\r\n\r\n  const isVisible = useMemo(() => {\r\n    return shouldDisplay ? shouldDisplay(values) : true;\r\n  }, [values, shouldDisplay]);\r\n\r\n  return isVisible ? (\r\n    <FormControl\r\n      isRequired={!!isRequired}\r\n      isInvalid={!!errorMessage}\r\n      {...objectStyles.control}\r\n    >\r\n      <Flex {...objectStyles.toolbar}>\r\n        {!!label && (\r\n          <FormLabel htmlFor={name} {...objectStyles.label}>\r\n            {label}\r\n          </FormLabel>\r\n        )}\r\n        {isCollapsable && (\r\n          <IconButton\r\n            as={isOpen ? ViewOffIcon : ViewIcon}\r\n            aria-label={isOpen ? 'Hide items' : 'Show items'}\r\n            onClick={onToggle}\r\n            {...objectStyles.collapseButton}\r\n          />\r\n        )}\r\n      </Flex>\r\n      <Collapse isOpen={isOpen}>\r\n        <Stack {...objectStyles.objectContainer}>\r\n          {Object.entries(field.properties).map(\r\n            ([fieldName, objectField], i) => (\r\n              <Box key={i} {...objectStyles.propertyContainer}>\r\n                {renderField(\r\n                  [`${name}.${fieldName}`, objectField],\r\n                  id,\r\n                  defaultValue?.[fieldName]\r\n                )}\r\n              </Box>\r\n            )\r\n          )}\r\n        </Stack>\r\n      </Collapse>\r\n      {!!helperText && (\r\n        <FormHelperText {...objectStyles.helperText}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n      <FormErrorMessage {...objectStyles.errorMessage}>\r\n        {errorMessage}\r\n      </FormErrorMessage>\r\n    </FormControl>\r\n  ) : null;\r\n};\r\n","import React, { FC, BaseSyntheticEvent, useMemo } from 'react';\r\nimport { Box, Heading, Stack, ButtonGroup, Button } from '@chakra-ui/react';\r\nimport { useForm, FormProvider, UseFormOptions } from 'react-hook-form';\r\nimport merge from 'lodash.merge';\r\n\r\nimport { FormStyles, Field, Schema } from '../types';\r\nimport { StyleCtx } from '../hooks/useStyles';\r\nimport { TextField } from './TextField';\r\nimport { TextAreaField } from './TextAreaField';\r\nimport { NumberField } from './NumberField';\r\nimport {\r\n  ArrayField,\r\n  arrayFieldStyles,\r\n  ObjectField,\r\n  objectFieldStyles,\r\n} from './Containers';\r\nimport { SwitchField } from './SwitchField';\r\nimport { CheckboxField, checkboxFieldStyles } from './CheckboxField';\r\nimport { SelectField } from './SelectField';\r\n\r\nexport interface FormProps {\r\n  title?: string;\r\n  schema: Schema;\r\n  handleSubmit: (values: any, e?: BaseSyntheticEvent) => void;\r\n  styles?: FormStyles;\r\n  overwriteDefaultStyles?: boolean;\r\n  formOptions?: UseFormOptions;\r\n  buttons?: {\r\n    reset?: {\r\n      text?: string;\r\n      hidden?: boolean;\r\n    };\r\n    submit?: {\r\n      text?: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst defaultStyles: FormStyles = {\r\n  form: {\r\n    container: {\r\n      padding: 4,\r\n    },\r\n    title: {\r\n      size: 'lg',\r\n      marginBottom: 4,\r\n    },\r\n    fieldSpacing: 6,\r\n    buttonGroup: {\r\n      marginTop: 4,\r\n    },\r\n    submitButton: {\r\n      size: 'sm',\r\n    },\r\n    resetButton: {\r\n      size: 'sm',\r\n    },\r\n  },\r\n  arrayField: arrayFieldStyles,\r\n  objectField: objectFieldStyles,\r\n  checkboxField: checkboxFieldStyles,\r\n};\r\n\r\nconst renderField = ([name, field]: [string, Field]) => {\r\n  let Component: any = null;\r\n\r\n  switch (field.type) {\r\n    case 'text':\r\n      Component = TextField;\r\n      break;\r\n\r\n    case 'textArea':\r\n      Component = TextAreaField;\r\n      break;\r\n\r\n    case 'number':\r\n      Component = NumberField;\r\n      break;\r\n\r\n    case 'array':\r\n      Component = ArrayField;\r\n      break;\r\n\r\n    case 'object':\r\n      Component = ObjectField;\r\n      break;\r\n\r\n    case 'switch':\r\n      Component = SwitchField;\r\n      break;\r\n\r\n    case 'checkbox':\r\n      Component = CheckboxField;\r\n      break;\r\n\r\n    case 'select':\r\n      Component = SelectField;\r\n      break;\r\n\r\n    case 'custom':\r\n      Component = field.component;\r\n      return (\r\n        <Box key={`${name}-container`}>\r\n          <Component name={name} field={field} {...field.props} />\r\n        </Box>\r\n      );\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Box key={`${name}-container`}>\r\n      <Component name={name} field={field} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const Form: FC<FormProps> = ({\r\n  title,\r\n  schema,\r\n  handleSubmit,\r\n  formOptions,\r\n  overwriteDefaultStyles,\r\n  buttons,\r\n  styles = {},\r\n}) => {\r\n  const form = useForm(formOptions);\r\n\r\n  const baseStyles = useMemo(() => {\r\n    return overwriteDefaultStyles ? styles : merge(defaultStyles, styles);\r\n  }, [styles, overwriteDefaultStyles]);\r\n\r\n  return (\r\n    <StyleCtx.Provider value={baseStyles}>\r\n      <FormProvider {...form}>\r\n        <Box\r\n          as=\"form\"\r\n          onSubmit={form.handleSubmit(handleSubmit)}\r\n          {...baseStyles.form?.container}\r\n        >\r\n          {!!title && <Heading {...baseStyles.form?.title}>{title}</Heading>}\r\n          <Stack spacing={baseStyles.form?.fieldSpacing}>\r\n            {Object.entries(schema).map(renderField)}\r\n          </Stack>\r\n          <ButtonGroup {...baseStyles.form?.buttonGroup}>\r\n            {buttons?.reset?.hidden ? null : (\r\n              <Button type=\"reset\" {...baseStyles.form?.resetButton}>\r\n                {buttons?.reset?.text || 'Reset'}\r\n              </Button>\r\n            )}\r\n            <Button type=\"submit\" {...baseStyles.form?.submitButton}>\r\n              {buttons?.submit?.text || 'Submit'}\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n      </FormProvider>\r\n    </StyleCtx.Provider>\r\n  );\r\n};\r\n"],"names":["StyleCtx","createContext","useStyles","type","inlineStyles","baseStyles","useContext","useMemo","useErrorMessage","name","label","useFormContext","errors","error","undefined","message","replace","TextField","id","field","defaultValue","placeholder","htmlInputType","helperText","isRequired","leftInputAddon","rightInputAddon","shouldDisplay","styles","fieldStyles","register","watch","errorMessage","values","isVisible","React","FormControl","isInvalid","control","FormLabel","htmlFor","InputGroup","inputGroup","InputLeftAddon","Input","ref","input","InputRightAddon","FormHelperText","FormErrorMessage","TextAreaField","Textarea","NumberField","key","Controller","as","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","SwitchField","Switch","checkboxFieldStyles","checkboxGroup","isInline","spacing","CheckboxField","Stack","checkboxes","map","checkbox","Checkbox","SelectField","Select","options","value","select","option","renderField","Component","ArrayField","ObjectField","component","Box","props","arrayFieldStyles","arrayContainer","marginTop","padding","display","countText","fontWeight","marginLeft","toolbar","alignItems","buttonGroup","addButton","size","deleteButton","margin","clearButton","collapseButton","itemContainer","gridTemplateColumns","paddingLeft","paddingBottom","paddingTop","border","borderRadius","borderColor","backgroundColor","deleteItemContainer","isCollapsable","itemField","useFieldArray","fields","append","remove","useDisclosure","defaultIsOpen","isOpen","onOpen","onToggle","arrayStyles","addItem","Flex","length","ButtonGroup","IconButton","icon","AddIcon","onClick","DeleteIcon","ViewOffIcon","ViewIcon","Collapse","item","i","objectFieldStyles","objectContainer","borderWidth","objectStyles","Object","entries","properties","fieldName","objectField","propertyContainer","defaultStyles","form","container","title","marginBottom","fieldSpacing","submitButton","resetButton","arrayField","checkboxField","Form","schema","handleSubmit","formOptions","overwriteDefaultStyles","buttons","useForm","merge","Provider","FormProvider","onSubmit","Heading","reset","hidden","Button","text","submit"],"mappings":"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"}